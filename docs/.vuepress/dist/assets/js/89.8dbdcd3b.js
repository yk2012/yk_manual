(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{639:function(t,a,s){"use strict";s.r(a);var n=s(17),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_1-函数-function"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-函数-function"}},[t._v("#")]),t._v(" 1. 函数（Function）")]),t._v(" "),s("ul",[s("li",[t._v("函数也是一个对象，也具有普通对象的功能（能有属性）")]),t._v(" "),s("li",[t._v("函数中可以封装一些代码，在需要的时候可以去调用函数来执行这些代码")]),t._v(" "),s("li",[t._v("使用typeof检查一个函数时会返回function")])]),t._v(" "),s("h3",{attrs:{id:"_1-1-创建函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-创建函数"}},[t._v("#")]),t._v(" 1.1 创建函数")]),t._v(" "),s("ul",[s("li",[t._v("函数声明")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("函数名")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("形参"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("形参"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("形参"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n语句"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("函数表达式")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("函数名")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("形参"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("形参"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("形参"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n语句"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("调用函数")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("函数对象")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("实参"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("实参"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("…实参"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("当我们调用函数时，函数中封装的代码会按照编写的顺序执行")])]),t._v(" "),s("li",[s("p",[t._v("立即执行函数\n函数定义完，立即被调用，这种函数叫做立即执行函数\n立即执行函数往往只会执行一次")])])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a = "')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b = "')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"_1-2-遍历对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-遍历对象"}},[t._v("#")]),t._v(" 1.2 遍历对象")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"property：name ="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<br/>"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_1-3-形参和实参"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-形参和实参"}},[t._v("#")]),t._v(" 1.3 形参和实参")]),t._v(" "),s("ul",[s("li",[t._v("形参：形式参数")])]),t._v(" "),s("ol",[s("li",[t._v("定义函数时，可以在()中定义一个或多个形参，形参之间使用,隔开")]),t._v(" "),s("li",[t._v("定义形参就相当于在函数内声明了对应的变量但是并不赋值，")]),t._v(" "),s("li",[t._v("形参会在调用时才赋值。")])]),t._v(" "),s("ul",[s("li",[t._v("实参：实际参数")])]),t._v(" "),s("ol",[s("li",[t._v("调用函数时，可以在()传递实参，传递的实参会赋值给对应的形参,")]),t._v(" "),s("li",[t._v("调用函数时JS解析器不会检查实参的类型和个数，可以传递任意数据类型的值。")]),t._v(" "),s("li",[t._v("如果实参的数量大于形参，多余实参将不会赋值，")]),t._v(" "),s("li",[t._v("如果实参的数量小于形参，则没有对应实参的形参将会赋值undefined")])]),t._v(" "),s("h3",{attrs:{id:"_1-4-返回值-就是函数执行的结果。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-返回值-就是函数执行的结果。"}},[t._v("#")]),t._v(" 1.4 返回值，就是函数执行的结果。")]),t._v(" "),s("ul",[s("li",[t._v("使用return 来设置函数的返回值。")])]),t._v(" "),s("ol",[s("li",[t._v("语法：return 值;")]),t._v(" "),s("li",[t._v("该值就会成为函数的返回值，可以通过一个变量来接收返回值")]),t._v(" "),s("li",[t._v("return后边的代码都不会执行，一旦执行到return语句时，函数将会立刻退出。")]),t._v(" "),s("li",[t._v("return后可以跟任意类型的值，可以是基本数据类型，也可以是一个对象。")]),t._v(" "),s("li",[t._v("如果return后不跟值，或者是不写return则函数默认返回undefined。")])]),t._v(" "),s("ul",[s("li",[t._v("break、continue和return")])]),t._v(" "),s("ol",[s("li",[t._v("break 退出循环")]),t._v(" "),s("li",[t._v("continue 跳过当次循环")]),t._v(" "),s("li",[t._v("return 退出函数")])]),t._v(" "),s("h3",{attrs:{id:"_1-5-参数-函数的实参也可以是任意的数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-参数-函数的实参也可以是任意的数据类型"}},[t._v("#")]),t._v(" 1.5 参数，函数的实参也可以是任意的数据类型")]),t._v(" "),s("h3",{attrs:{id:"_1-6-方法-method"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-方法-method"}},[t._v("#")]),t._v(" 1.6 方法（method）")]),t._v(" "),s("ul",[s("li",[t._v("可以将一个函数设置为一个对象的属性，")]),t._v(" "),s("li",[t._v("当一个对象的属性是一个函数时，")]),t._v(" "),s("li",[t._v("我们称这个函数是该对象的方法。")]),t._v(" "),s("li",[t._v("对象.方法名();")]),t._v(" "),s("li",[t._v("函数名()")])]),t._v(" "),s("h1",{attrs:{id:"_2-函数的属性和方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-函数的属性和方法"}},[t._v("#")]),t._v(" 2. 函数的属性和方法")]),t._v(" "),s("h3",{attrs:{id:"call-、apply"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#call-、apply"}},[t._v("#")]),t._v(" call()、apply()")]),t._v(" "),s("ul",[s("li",[t._v("这两个方法都是函数对象的方法需要通过函数对象来调用")]),t._v(" "),s("li",[t._v("通过两个方法可以直接调用函数，并且可以通过第一个实参来指定函数中this")]),t._v(" "),s("li",[t._v("不同的是call是直接传递函数的实参而apply需要将实参封装到一个数组中传递")])]),t._v(" "),s("h3",{attrs:{id:"arguments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arguments"}},[t._v("#")]),t._v(" arguments")]),t._v(" "),s("ul",[s("li",[t._v("arguments和this类似，都是函数中的隐含的参数")]),t._v(" "),s("li",[t._v("arguments是一个类数组元素，它用来封装函数执行过程中的实参")]),t._v(" "),s("li",[t._v("所以即使不定义形参，也可以通过arguments来使用实参")]),t._v(" "),s("li",[t._v("arguments中有一个属性callee表示当前执行的函数对象")])]),t._v(" "),s("h3",{attrs:{id:"this-调用函数的那个对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#this-调用函数的那个对象"}},[t._v("#")]),t._v(" this（调用函数的那个对象）")]),t._v(" "),s("p",[t._v("this是函数的上下文对象，根据函数的调用方式不同会执向不同的对象\n1.以函数的形式调用时，this是window\n2.以方法的形式调用时，this是调用方法的对象\n3.以构造函数的形式调用时，this是新建的那个对象\n4.使用call和apply调用时，this是指定的那个对象\n5.在全局作用域中this代表window")]),t._v(" "),s("h1",{attrs:{id:"_3-作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-作用域"}},[t._v("#")]),t._v(" 3. 作用域")]),t._v(" "),s("p",[t._v("作用域简单来说就是一个变量的作用范围。\n在JS中作用域分成两种：")]),t._v(" "),s("h3",{attrs:{id:"_3-1-全局作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-全局作用域"}},[t._v("#")]),t._v(" 3.1 全局作用域")]),t._v(" "),s("ul",[s("li",[t._v("直接在script标签中编写的代码都运行在全局作用域中")]),t._v(" "),s("li",[t._v("全局作用域在打开页面时创建，在页面关闭时销毁。")]),t._v(" "),s("li",[t._v("全局作用域中有一个全局对象window，window对象由浏览器提供，")]),t._v(" "),s("li",[t._v("可以在页面中直接使用，它代表的是整个的浏览器的窗口。")]),t._v(" "),s("li",[t._v("在全局作用域中创建的变量都会作为window对象的属性保存")]),t._v(" "),s("li",[t._v("在全局作用域中创建的函数都会作为window对象的方法保存")]),t._v(" "),s("li",[t._v("在全局作用域中创建的变量和函数可以在页面的任意位置访问。")]),t._v(" "),s("li",[t._v("在函数作用域中也可以访问到全局作用域的变量。")]),t._v(" "),s("li",[t._v("尽量不要在全局中创建变量")])]),t._v(" "),s("h3",{attrs:{id:"_3-2-函数作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-函数作用域"}},[t._v("#")]),t._v(" 3.2 函数作用域")]),t._v(" "),s("ul",[s("li",[t._v("函数作用域是函数执行时创建的作用域，每次调用函数都会创建一个新的函数作用域。")]),t._v(" "),s("li",[t._v("函数作用域在函数执行时创建，在函数执行结束时销毁。")]),t._v(" "),s("li",[t._v("在函数作用域中创建的变量，不能在全局中访问。")]),t._v(" "),s("li",[t._v("当在函数作用域中使用一个变量时，它会先在自身作用域中寻找，")]),t._v(" "),s("li",[t._v("如果找到了则直接使用，如果没有找到则到上一级作用域中寻找，")]),t._v(" "),s("li",[t._v("如果找到了则使用，找不到则继续向上找，一直会")])]),t._v(" "),s("h3",{attrs:{id:"_3-3-变量的声明提前"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-变量的声明提前"}},[t._v("#")]),t._v(" 3.3 变量的声明提前")]),t._v(" "),s("p",[t._v("在全局作用域中，使用var关键字声明的变量会在所有的代码执行之前被声明，但是不会赋值。\n所以我们可以在变量声明前使用变量。但是不使用var关键字声明的变量不会被声明提前。\n在函数作用域中，也具有该特性，使用var关键字声明的变量会在函数所有的代码执行前被声明，\n如果没有使用var关键字声明变量，则变量会变成全局变量")]),t._v(" "),s("h3",{attrs:{id:"_3-4-函数的声明提前"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-函数的声明提前"}},[t._v("#")]),t._v(" 3.4 函数的声明提前")]),t._v(" "),s("p",[t._v("在全局作用域中，使用函数声明创建的函数（function fun(){}）,会在所有的代码执行之前被创建，\n也就是我们可以在函数声明前去调用函数，但是使用函数表达式(var fun = function(){})创建的函数没有该特性\n在函数作用域中，使用函数声明创建的函数，会在所有的函数中的代码执行之前就被创建好了。")]),t._v(" "),s("h3",{attrs:{id:"_3-5-this-上下文对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-this-上下文对象"}},[t._v("#")]),t._v(" 3.5 this（上下文对象）")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("我们每次调用函数时，解析器都会将一个上下文对象作为隐含的参数传递进函数。")])]),t._v(" "),s("li",[s("p",[t._v("使用this来引用上下文对象，根据函数的调用形式不同，this的值也不同。")])]),t._v(" "),s("li",[s("p",[t._v("指向当前对象")])]),t._v(" "),s("li",[s("p",[t._v("this的不同的情况：")])])]),t._v(" "),s("ol",[s("li",[t._v("以函数的形式调用时，this是window")]),t._v(" "),s("li",[t._v("以方法的形式调用时，this就是调用方法的对象")]),t._v(" "),s("li",[t._v("以构造函数的形式调用时，this就是新创建的对象")])]),t._v(" "),s("h1",{attrs:{id:"_4-构造函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-构造函数"}},[t._v("#")]),t._v(" 4.构造函数")]),t._v(" "),s("ul",[s("li",[t._v("构造函数是专门用来创建对象的函数")]),t._v(" "),s("li",[t._v("一个构造函数我们也可以称为一个类")]),t._v(" "),s("li",[t._v("通过一个构造函数创建的对象，我们称该对象时这个构造函数的实例")]),t._v(" "),s("li",[t._v("通过同一个构造函数创建的对象，我们称为一类对象")]),t._v(" "),s("li",[t._v("构造函数就是一个普通的函数，只是他的调用方式不同，")]),t._v(" "),s("li",[t._v("如果直接调用，它就是一个普通函数")]),t._v(" "),s("li",[t._v("如果使用new来调用，则它就是一个构造函数")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gender")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gender "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gender"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"构造函数的执行流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造函数的执行流程"}},[t._v("#")]),t._v(" 构造函数的执行流程：")]),t._v(" "),s("p",[t._v("1.创建一个新的对象\n2.将新的对象作为函数的上下文对象（this）\n3.执行函数中的代码\n4.将新建的对象返回")]),t._v(" "),s("h3",{attrs:{id:"instanceof-用来检查一个对象是否是一个类的实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#instanceof-用来检查一个对象是否是一个类的实例"}},[t._v("#")]),t._v(" instanceof 用来检查一个对象是否是一个类的实例")]),t._v(" "),s("ul",[s("li",[t._v("语法：对象 instanceof 构造函数")]),t._v(" "),s("li",[t._v("如果该对象时构造函数的实例，则返回true，否则返回false")]),t._v(" "),s("li",[t._v("Object是所有对象的祖先，所以任何对象和Object做instanceof都会返回true")])]),t._v(" "),s("h3",{attrs:{id:"枚举对象中的属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#枚举对象中的属性"}},[t._v("#")]),t._v(" 枚举对象中的属性")]),t._v(" "),s("p",[t._v("for…in")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" 属性名 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" 对象"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("for…in语句的循环体会执行多次，对象中有几个属性就会执行几次")]),t._v(" "),s("li",[t._v("每次讲一个属性名赋值给我们定义的变量，我们可以通过它来获取对象中的属性")])]),t._v(" "),s("h1",{attrs:{id:"_5-原型-prototype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-原型-prototype"}},[t._v("#")]),t._v(" 5. 原型（prototype）")]),t._v(" "),s("ul",[s("li",[t._v("创建一个函数以后，解析器都会默认在函数中添加一个数prototype")]),t._v(" "),s("li",[t._v("prototype属性指向的是一个对象，这个对象我们称为原型对象。")]),t._v(" "),s("li",[t._v("当函数作为构造函数使用，它所创建的对象中都会有一个隐含的属性执行该原型对象。")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("这个隐含的属性可以通过对象"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__来访问。\n")])])]),s("ul",[s("li",[t._v("原型对象就相当于一个公共的区域，凡是通过同一个构造函数创建的对象他们通常都可以访问到相同的原型对象。")]),t._v(" "),s("li",[t._v("我们可以将对象中共有的属性和方法统一添加到原型对象中，")]),t._v(" "),s("li",[t._v("这样我们只需要添加一次，就可以使所有的对象都可以使用。")]),t._v(" "),s("li",[t._v("当我们去访问对象的一个属性或调用对象的一个方法时，它会先自身中寻找，")]),t._v(" "),s("li",[t._v("如果在自身中找到了，则直接使用。")]),t._v(" "),s("li",[t._v("如果没有找到，则去原型对象中寻找，如果找到了则使用，")]),t._v(" "),s("li",[t._v("如果没有找到，则去原型的原型中寻找，依此类推。直到找到Object的原型为止，Object的原型的原型为null，")]),t._v(" "),s("li",[t._v("如果依然没有找到则返回undefined")])]),t._v(" "),s("h3",{attrs:{id:"hasownproperty"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hasownproperty"}},[t._v("#")]),t._v(" hasOwnProperty()")]),t._v(" "),s("ul",[s("li",[t._v("这个方法可以用来检查对象自身中是否含有某个属性")]),t._v(" "),s("li",[t._v("语法：对象.hasOwnProperty(“属性名”)")])]),t._v(" "),s("h1",{attrs:{id:"_6-tostring方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-tostring方法"}},[t._v("#")]),t._v(" 6. toString方法")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("当我们直接在页面中打印一个对象时，事件上是输出的对象的toString()方法的返回值")])]),t._v(" "),s("li",[s("p",[t._v("如果我们希望在输出对象时不输出[object Object]，可以为对象添加一个toString()方法")])])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//修改Person原型的toString  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("toString")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Person[name="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('",age="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('",gender="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gender"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"]"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h1",{attrs:{id:"垃圾回收-gc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收-gc"}},[t._v("#")]),t._v(" 垃圾回收（GC）")]),t._v(" "),s("ul",[s("li",[t._v("就像人生活的时间长了会产生垃圾一样，程序运行过程中也会产生垃圾")]),t._v(" "),s("li",[t._v("这些垃圾积攒过多以后，会导致程序运行的速度过慢，")]),t._v(" "),s("li",[t._v("所以我们需要一个垃圾回收的机制，来处理程序运行过程中产生垃圾")]),t._v(" "),s("li",[t._v("当一个对象没有任何的变量或属性对它进行引用，此时我们将永远无法操作该对象，")]),t._v(" "),s("li",[t._v("此时这种对象就是一个垃圾，这种对象过多会占用大量的内存空间，导致程序运行变慢，")]),t._v(" "),s("li",[t._v("所以这种垃圾必须进行清理。")]),t._v(" "),s("li",[t._v("在JS中拥有自动的垃圾回收机制，会自动将这些垃圾对象从内存中销毁，")]),t._v(" "),s("li",[t._v("我们不需要也不能进行垃圾回收的操作")]),t._v(" "),s("li",[t._v("我们需要做的只是要将不再使用的对象设置null即可")])])])}),[],!1,null,null,null);a.default=r.exports}}]);