(window.webpackJsonp=window.webpackJsonp||[]).push([[217],{784:function(v,t,_){"use strict";_.r(t);var e=_(7),a=Object(e.a)({},(function(){var v=this,t=v.$createElement,_=v._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("blockquote",[_("p",[v._v("今天开始来学习JavaScript常见的设计模式，其实设计模式和算法一样，是脱离语言的一种通用性经验性的思想。前端程序员同样是软件工程师，需要扎实的专业基础，而设计模式也是计算机重要专业基础之一。")])]),v._v(" "),_("h1",{attrs:{id:"什么是设计模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是设计模式"}},[v._v("#")]),v._v(" 什么是设计模式")]),v._v(" "),_("p",[v._v("设计模式就是在软件设计过程中，针对特定问题的简洁而优雅的解决方案")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/57d0224122444e1ba695f119267401a1~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),v._v(" "),_("p",[v._v("在开发业务代码时，面临着各种各样不同的需要，不同的情况会总结出不同的解决方案。我们可以将这些"),_("strong",[v._v("经验总结")]),v._v("起来，"),_("strong",[v._v("合理运用")]),v._v("到不同的问题中，从而可以使用通用的方案来"),_("strong",[v._v("解决问题")]),v._v("。简单点可以将设计模式理解成在编写代码时的一些小套路，小技巧。")]),v._v(" "),_("p",[v._v("设计模式具有"),_("code",[v._v("SOLID")]),v._v("五大"),_("strong",[v._v("设计原则")])]),v._v(" "),_("ul",[_("li",[v._v("单一功能原则（"),_("code",[v._v("S")]),v._v("ingle Responsibility Principle）：一个程序只做好一件事")]),v._v(" "),_("li",[v._v("开放封闭原则（"),_("code",[v._v("O")]),v._v("pened Closed Principle）：对拓展开放，对修改封闭")]),v._v(" "),_("li",[v._v("里式替换原则（"),_("code",[v._v("L")]),v._v("iskov Substitution Principle）：子类能覆盖父类，并能出现在父类出现的地方")]),v._v(" "),_("li",[v._v("接口隔离原则（"),_("code",[v._v("I")]),v._v("nterface Segregation Principle）：保持接口的单一独立")]),v._v(" "),_("li",[v._v("依赖反转原则（"),_("code",[v._v("D")]),v._v("ependency Inversion Principle）：使用方法只关注接口而不关注具体类的实现")])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/98d2ec9a649c421c871e0be5504aab90~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),v._v(" "),_("blockquote",[_("p",[v._v("前端开发使用JavaScript，我们应该重点关注前两个原则也就是"),_("strong",[v._v("单一功能原则")]),v._v("和"),_("strong",[v._v("开放封闭原则")])])]),v._v(" "),_("h1",{attrs:{id:"为什么需要设计模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要设计模式"}},[v._v("#")]),v._v(" 为什么需要设计模式")]),v._v(" "),_("blockquote",[_("p",[v._v("为什么需要设计模式，也就是学习与使用设计模式可以带来哪些好处。")])]),v._v(" "),_("p",[v._v("正是因为现在的业务越来越庞大，而且还需要不断的迭代与更新，所以我们在编写代码的时候要考虑代码的可读性、拓展性、复用性和可靠性。")]),v._v(" "),_("ol",[_("li",[_("strong",[v._v("易读")]),v._v("性：能够提升代码的可读性，提升后续开发效率")]),v._v(" "),_("li",[_("strong",[v._v("拓展")]),v._v("性：对代码解耦，能很好地增强代码的易修改性和拓展性")]),v._v(" "),_("li",[_("strong",[v._v("复用")]),v._v("性：可以重用已有的解决方案，无需再重复相同工作")]),v._v(" "),_("li",[_("strong",[v._v("可靠")]),v._v("性：能够增加系统的健壮性，使代码编写真正工程化")])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9949876d5081445099835f55e9d17f0a~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),v._v(" "),_("h1",{attrs:{id:"设计模式的分类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#设计模式的分类"}},[v._v("#")]),v._v(" 设计模式的分类")]),v._v(" "),_("p",[v._v("从意图上区分，可以将设计模式分别被划分为"),_("strong",[v._v("创建型")]),v._v("模式、"),_("strong",[v._v("结构型")]),v._v("模式和"),_("strong",[v._v("行为型")]),v._v("模式")]),v._v(" "),_("ul",[_("li",[v._v("创建型模式的目的就是封装创建对象的变化")]),v._v(" "),_("li",[v._v("结构型模式封装的是对象之间的组合关系")]),v._v(" "),_("li",[v._v("行为型模式封装的是对象的行为变化。")])]),v._v(" "),_("h1",{attrs:{id:"javascript常见设计模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#javascript常见设计模式"}},[v._v("#")]),v._v(" JavaScript常见设计模式")]),v._v(" "),_("p",[v._v("我们常常能听到23种设计模式，今天跟着字节跳动的讲师，先来学习JavaScript常见的十种设计模式：")]),v._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://juejin.cn/post/7054932452417994782",target:"_blank",rel:"noopener noreferrer"}},[v._v("单例模式"),_("OutboundLink")],1)]),v._v(" "),_("li",[v._v("策略模式")]),v._v(" "),_("li",[v._v("代理模式")]),v._v(" "),_("li",[v._v("发布订阅模式")]),v._v(" "),_("li",[v._v("命令模式")]),v._v(" "),_("li",[v._v("组合模式")]),v._v(" "),_("li",[v._v("装饰器模式")]),v._v(" "),_("li",[v._v("适配器模式")])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/be64de95ba22477fb139db0e7a0794ce~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})])])}),[],!1,null,null,null);t.default=a.exports}}]);